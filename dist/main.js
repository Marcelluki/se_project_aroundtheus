!function(){"use strict";class e{constructor(e,t,s){let{name:r,link:o}=e;this._name=r,this._link=o,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}_handleDeleteCard(){this._cardElement.remove()}_handleLikeIcon(){this._cardElement.querySelector(".cards__like-button").classList.toggle("cards__like-button_active")}getView(){const e=this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0),t=e.querySelector(".cards__image");return t.src=this._link,t.alt=this._name,e.querySelector(".cards__title").textContent=this._name,this._setEventListeners(),e}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(){this._inputEls.forEach((e=>{if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e),this.toggleButtonState(this._submitButton)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened")}close(){this._popupElement.classList.remove("modal_opened")}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class r extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputItems=this._popupForm.querySelector(".modal__input")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputItems.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleFormSubmit)}}const o=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],n=document.querySelector("#profile__edit-button"),i=document.querySelector("#profile__edit-modal"),a=(i.querySelector(".modal__close"),document.querySelector(".profile__title")),l=document.querySelector(".profile__description"),c=document.querySelector("#profile-title-input"),u=document.querySelector("#profile-description-input"),_=i.querySelector(".modal__form"),d=document.querySelector("#card__add-modal"),m=(d.querySelector(".modal__close"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list")),p=document.querySelector("#profile__add-button"),h=d.querySelector("#add__card-form"),v=h.querySelector(".modal__input_type_title"),S=h.querySelector(".modal__input_type_url"),E=document.querySelector("#preview__image-modal");function y(t){return new e(t,"#card-template",((e,t)=>{k.open(e,t)})).getView()}function f(e){const t=y(e);m.prepend(t)}E.querySelector(".modal__close"),E.querySelector(".modal__preview-image"),E.querySelector(".modal__preview-text"),o.forEach((e=>{const t=y(e);m.prepend(t)}));const g={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},q=new t(g,_),w=new t(g,h);w.enableValidation(),q.enableValidation();const L=new r("#card__add-modal",(function(e){e.preventDefault(),f({name:v.value,link:S.value}),L.close(),h.reset(),w.toggleButtonState()}));L.setEventListeners(),p.addEventListener("click",(()=>{L.open()}));const b=new r("#profile__edit-modal",(function(e){e.preventDefault(),a.textContent=c.value,l.textContent=u.value,b.close()}));b.setEventListeners(),n.addEventListener("click",(()=>{const e=C.getUserInfo();c.value=e.name,u.value=e.job,b.open()}));const k=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._description=this._popupElement.querySelector(".modal__preview-text")}open(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,super.open()}close(){super.close()}}("#preview__image-modal");k.setEventListeners();const C=new class{constructor(e,t){this._name=document.querySelector(e),this._job=document.querySelector(t)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}}(".profile__title",".profile__description");new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._container=t,this._renderer=r}_renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:o,renderer:f},".cards__list-item")._renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,