!function(){"use strict";class e{constructor(e,t,s,i,r){let{name:o,link:n,_id:a,isLiked:l}=e;this._name=o,this._link=n,this.id=a,this.isLiked=l,this._cardSelector=t,this._handleImageClick=s,this._handleLikeClick=i,this._handleDeleteClick=r,this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".cards__list-item").cloneNode(!0),this.setLikeButtonState()}_setEventListeners(){this._cardElement.querySelector(".cards__like-button").addEventListener("click",(()=>{this._handleLikeClick(this)})),this._cardElement.querySelector(".cards__delete-button").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardElement.querySelector(".cards__image").addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}setLikeButtonState(){this.isLiked?this.likeCard():this.disLikeCard()}deleteCard(){this._cardElement.remove()}likeCard(){this._cardElement.querySelector(".cards__like-button").classList.add("cards__like-button_active")}disLikeCard(){this._cardElement.querySelector(".cards__like-button").classList.remove("cards__like-button_active")}_handleLikeIcon(){this._handleLikeClick({id:this._id,isLiked:this._isLiked}),this._cardElement.querySelector(".cards__like-button").classList.toggle("cards__like-button_active")}getView(){const e=this._cardElement.querySelector(".cards__image");return e.src=this._link,e.alt=this._name,this._cardElement.querySelector(".cards__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput(this._inputEls))return this._submitButton.classList.add(this._inactiveButtonClass),void(this._submitButton.disabled=!0);this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(){this._inputEls.forEach((e=>{if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}))}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e),this.toggleButtonState(this._submitButton)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()}))}}class i extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputItems=this._popupForm.querySelectorAll(".modal__input"),this._popupButton=this._popupElement.querySelector(".modal__button"),this._popupButtonText=this._popupButton.textContent}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputItems.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setLoading(e){this._popupButton.textContent=e?"Saving...":this._popupButtonText}}class r{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._container=document.querySelector(t),this._renderer=i}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}const o=document.querySelector("#profile__edit-button"),n=document.querySelector("#profile__edit-modal"),a=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-description-input"),c=document.querySelector(".profile__image-container"),d=document.querySelector("#edit__avatar-form"),_=(document.querySelector("#avatar-url-input"),a.value,l.value,n.querySelector(".modal__form")),u=document.querySelector("#card__add-modal"),h=(document.querySelector(".cards__list"),document.querySelector("#profile__add-button")),p=u.querySelector("#add__card-form"),m=(p.querySelector(".modal__input_type_title"),p.querySelector(".modal__input_type_url"),document.querySelector("#preview__image-modal"),{inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),v=new class{constructor(e,t){this._options=e,this._headers=t}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getInitialCards(){return fetch(`${this._options.baseUrl}/cards`,{headers:this._options.headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._options.baseUrl}/users/me`,{headers:this._options.headers}).then(this._checkResponse)}updateUserInfo(e){let{name:t,job:s}=e;return fetch(`${this._options.baseUrl}/users/me`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:t,about:s})}).then(this._checkResponse)}createCard(e){let{name:t,link:s}=e;return fetch(`${this._options.baseUrl}/cards`,{method:"POST",headers:this._options.headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}setUserAvatar(e){return fetch(`${this._options.baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}likeCard(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._options.headers}).then(this._checkResponse)}dislikeCard(e){return fetch(`${this._options.baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._options.headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._options.baseUrl}/cards/${e}`,{method:"DELETE",headers:this._options.headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"e9b30f62-f32d-45b6-96ae-c516b6b7d5cd","Content-Type":"application/json"}});function E(t){const s=function(t){return new e(t,"#card-template",((e,t)=>{q.open(e,t)}),(e=>e.isLiked?v.dislikeCard(e.id).then((t=>{e.disLikeCard(),e.isLiked=!e.isLiked})).catch((e=>{console.error(`${e}. Cannot dislike like button`)})):v.likeCard(e.id).then((t=>{e.likeCard(),e.isLiked=!e.isLiked})).catch((e=>{console.error(e)}))),L).getView()}(t);I.addItem(s)}const S=new t(m,_),k=new class extends s{constructor(e){super({popupSelector:e}),this.popupForm=this._popupElement.querySelector(".modal__form"),this._popupButton=this._popupElement.querySelector(".modal__button"),this.setEventListeners(),this._popupButtonText=this._popupButton.textContent}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this.popupForm.addEventListener("submit",(e=>(e.preventDefault(),this._handleFormSubmit().then((()=>{this.close()})))))}setLoading(e){this._popupButton.textContent=e?"Deleting...":this._popupButtonText}}("#delete__card-modal");function L(e){k.setSubmitAction((()=>(k.setLoading(!0),v.deleteCard(e.id).then((t=>{e.deleteCard()})).catch((e=>{console.error(e)})).finally((()=>{k.setLoading(!1)}))))),k.open()}const b=new t(m,p);b.enableValidation(),S.enableValidation();const y=new i("#card__add-modal",(function(e){y.setLoading(!0);const{title:t,imageUrl:s}=e;v.createCard({name:t,link:s}).then((e=>{E(e),y.close()})).catch((e=>{console.error(e)})).finally((()=>{y.setLoading(!1)})),b.toggleButtonState()}));y.setEventListeners(),h.addEventListener("click",(()=>{y.open(),b.toggleButtonState()}));const f=new i("#profile__edit-modal",(function(e){f.setLoading(!0),v.updateUserInfo(e).then((()=>{B.setUserInfo(e.name,e.job),f.close()})).catch((e=>{console.error(e)})).finally((()=>{f.setLoading(!1)}))}));f.setEventListeners(),o.addEventListener("click",(()=>{const e=B.getUserInfo();a.value=e.name,l.value=e.job,f.open()}));const C=new t(m,d);C.enableValidation();const g=new i("#avatar__edit-modal",(e=>{g.setLoading(!0),v.setUserAvatar(e.avatar).then((e=>{B.setAvatar(e.avatar),g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners(),c.addEventListener("click",(()=>{g.open(),C.toggleButtonState()}));const q=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__preview-image"),this._description=this._popupElement.querySelector(".modal__preview-text")}open(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,super.open()}}("#preview__image-modal");q.setEventListeners();const B=new class{constructor(e,t,s){this._name=document.querySelector(e),this._job=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}setAvatar(e){this._avatar.src=e}}(".profile__title",".profile__description",".profile__image");let I;v.getUserInfo().then((e=>{B.setUserInfo(e.name,e.about),B.setAvatar(e.avatar)})).catch((e=>{console.error(e)})),v.getInitialCards().then((e=>{I=new r({items:e.reverse(),renderer:E},".cards__list"),I.renderItems()})).catch((e=>{console.error(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoieUJBQWUsTUFBTUEsRUFDbkJDLFdBQUFBLENBQVdDLEVBRVRDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBQ0EsSUFMQSxLQUFFQyxFQUFJLEtBQUVDLEVBQUksSUFBRUMsRUFBRyxRQUFFQyxHQUFTUixFQU01QlMsS0FBS0MsTUFBUUwsRUFDYkksS0FBS0UsTUFBUUwsRUFDYkcsS0FBS0csR0FBS0wsRUFDVkUsS0FBS0QsUUFBVUEsRUFDZkMsS0FBS0ksY0FBZ0JaLEVBQ3JCUSxLQUFLSyxrQkFBb0JaLEVBQ3pCTyxLQUFLTSxpQkFBbUJaLEVBQ3hCTSxLQUFLTyxtQkFBcUJaLEVBQzFCSyxLQUFLUSxhQUFlQyxTQUNqQkMsY0FBY1YsS0FBS0ksZUFDbkJPLFFBQVFELGNBQWMscUJBQ3RCRSxXQUFVLEdBQ2JaLEtBQUthLG9CQUNQLENBQ0FDLGtCQUFBQSxHQUVFZCxLQUFLUSxhQUNGRSxjQUFjLHVCQUNkSyxpQkFBaUIsU0FBUyxLQUN6QmYsS0FBS00saUJBQWlCTixLQUFLLElBRy9CQSxLQUFLUSxhQUNGRSxjQUFjLHlCQUNkSyxpQkFBaUIsU0FBUyxLQUN6QmYsS0FBS08sbUJBQW1CUCxLQUFLLElBR2pDQSxLQUFLUSxhQUNGRSxjQUFjLGlCQUNkSyxpQkFBaUIsU0FBUyxLQUN6QmYsS0FBS0ssa0JBQWtCTCxLQUFLQyxNQUFPRCxLQUFLRSxNQUFNLEdBRXBELENBRUFXLGtCQUFBQSxHQUNNYixLQUFLRCxRQUNQQyxLQUFLZ0IsV0FFTGhCLEtBQUtpQixhQUVULENBRUFDLFVBQUFBLEdBQ0VsQixLQUFLUSxhQUFhVyxRQUNwQixDQUVBSCxRQUFBQSxHQUNFaEIsS0FBS1EsYUFDRkUsY0FBYyx1QkFDZFUsVUFBVUMsSUFBSSw0QkFDbkIsQ0FFQUosV0FBQUEsR0FDRWpCLEtBQUtRLGFBQ0ZFLGNBQWMsdUJBQ2RVLFVBQVVELE9BQU8sNEJBQ3RCLENBRUFHLGVBQUFBLEdBQ0V0QixLQUFLTSxpQkFBaUIsQ0FBRUgsR0FBSUgsS0FBS0YsSUFBS0MsUUFBU0MsS0FBS3VCLFdBQ3BEdkIsS0FBS1EsYUFDRkUsY0FBYyx1QkFDZFUsVUFBVUksT0FBTyw0QkFDdEIsQ0FFQUMsT0FBQUEsR0FDRSxNQUFNQyxFQUFjMUIsS0FBS1EsYUFBYUUsY0FBYyxpQkFXcEQsT0FWQWdCLEVBQVlDLElBQU0zQixLQUFLRSxNQUN2QndCLEVBQVlFLElBQU01QixLQUFLQyxNQUVIRCxLQUFLUSxhQUFhRSxjQUFjLGlCQUN4Q21CLFlBQWM3QixLQUFLQyxNQUkvQkQsS0FBS2MscUJBRUVkLEtBQUtRLFlBQ2QsRUN2RmEsTUFBTXNCLEVBQ25CeEMsV0FBQUEsQ0FBWXlDLEVBQVVDLEdBQ3BCaEMsS0FBS2lDLGVBQWlCRixFQUFTRyxjQUMvQmxDLEtBQUttQyxzQkFBd0JKLEVBQVNLLHFCQUN0Q3BDLEtBQUtxQyxxQkFBdUJOLEVBQVNPLG9CQUNyQ3RDLEtBQUt1QyxpQkFBbUJSLEVBQVNTLGdCQUNqQ3hDLEtBQUt5QyxZQUFjVixFQUFTVyxXQUM1QjFDLEtBQUsyQyxNQUFRWCxFQUNiaEMsS0FBSzRDLGNBQWdCNUMsS0FBSzJDLE1BQU1qQyxjQUFjVixLQUFLbUMsc0JBQ3JELENBRUFVLGVBQUFBLENBQWdCQyxHQUNkLE1BQU1DLEVBQWlCL0MsS0FBSzJDLE1BQU1qQyxjQUFlLElBQUdvQyxFQUFRM0MsWUFDNUQyQyxFQUFRMUIsVUFBVUMsSUFBSXJCLEtBQUt1QyxrQkFDM0JRLEVBQWVsQixZQUFjaUIsRUFBUUUsa0JBQ3JDRCxFQUFlM0IsVUFBVUMsSUFBSXJCLEtBQUt5QyxZQUNwQyxDQUNBUSxlQUFBQSxDQUFnQkgsR0FDZCxNQUFNQyxFQUFpQi9DLEtBQUsyQyxNQUFNakMsY0FBZSxJQUFHb0MsRUFBUTNDLFlBQzVEMkMsRUFBUTFCLFVBQVVELE9BQU9uQixLQUFLdUMsa0JBQzlCUSxFQUFlbEIsWUFBYyxHQUM3QmtCLEVBQWUzQixVQUFVRCxPQUFPbkIsS0FBS3lDLFlBQ3ZDLENBRUFTLGlCQUFBQSxHQUNFLEdBQUlsRCxLQUFLbUQsaUJBQWlCbkQsS0FBS29ELFdBRzdCLE9BRkFwRCxLQUFLNEMsY0FBY3hCLFVBQVVDLElBQUlyQixLQUFLcUMsMkJBQ3RDckMsS0FBSzRDLGNBQWNTLFVBQVcsR0FJaENyRCxLQUFLNEMsY0FBY3hCLFVBQVVELE9BQU9uQixLQUFLcUMsc0JBQ3pDckMsS0FBSzRDLGNBQWNTLFVBQVcsQ0FDaEMsQ0FDQUYsZ0JBQUFBLENBQWlCRyxHQUNmLE9BQVFBLEVBQVVDLE9BQU9ULEdBQVlBLEVBQVFVLFNBQVNDLE9BQ3hELENBRUFDLG1CQUFBQSxHQUNFMUQsS0FBS29ELFVBQVVPLFNBQVNiLElBQ3RCLElBQUtBLEVBQVFVLFNBQVNDLE1BQ3BCLE9BQU96RCxLQUFLNkMsZ0JBQWdCQyxHQUU5QjlDLEtBQUtpRCxnQkFBZ0JILEVBQVEsR0FFakMsQ0FFQWhDLGtCQUFBQSxHQUNFZCxLQUFLb0QsVUFBWSxJQUFJcEQsS0FBSzJDLE1BQU1pQixpQkFBaUI1RCxLQUFLaUMsaUJBRXREakMsS0FBS29ELFVBQVVPLFNBQVNiLElBQ3RCQSxFQUFRL0IsaUJBQWlCLFNBQVMsS0FDaENmLEtBQUswRCxvQkFBb0IxRCxLQUFLMkMsTUFBT0csR0FDckM5QyxLQUFLa0Qsa0JBQWtCbEQsS0FBSzRDLGNBQWMsR0FDMUMsR0FFTixDQUVBaUIsZ0JBQUFBLEdBQ0U3RCxLQUFLMkMsTUFBTTVCLGlCQUFpQixVQUFXK0MsSUFDckNBLEVBQUVDLGdCQUFnQixJQUdwQi9ELEtBQUtjLG9CQUNQLEVDaEVhLE1BQU1rRCxFQUNuQjFFLFdBQUFBLENBQVdDLEdBQW9CLElBQW5CLGNBQUUwRSxHQUFlMUUsRUFDM0JTLEtBQUtrRSxjQUFnQnpELFNBQVNDLGNBQWN1RCxFQUM5QyxDQUVBRSxJQUFBQSxHQUNFbkUsS0FBS2tFLGNBQWM5QyxVQUFVQyxJQUFJLGdCQUNqQ1osU0FBU00saUJBQWlCLFVBQVdmLEtBQUtvRSxnQkFDNUMsQ0FDQUMsS0FBQUEsR0FDRXJFLEtBQUtrRSxjQUFjOUMsVUFBVUQsT0FBTyxnQkFDcENWLFNBQVM2RCxvQkFBb0IsVUFBV3RFLEtBQUtvRSxnQkFDL0MsQ0FFQUEsZ0JBQW1CRyxJQUNELFdBQVpBLEVBQUlDLEtBQ054RSxLQUFLcUUsT0FDUCxFQUdGSSxpQkFBQUEsR0FDbUJ6RSxLQUFLa0UsY0FBY3hELGNBQWMsaUJBQ3pDSyxpQkFBaUIsU0FBUyxLQUNqQ2YsS0FBS3FFLE9BQU8sSUFHZHJFLEtBQUtrRSxjQUFjbkQsaUJBQWlCLFNBQVV3RCxJQUN4Q0EsRUFBSUcsT0FBT3RELFVBQVV1RCxTQUFTLGlCQUNoQzNFLEtBQUtxRSxPQUNQLEdBRUosRUM3QmEsTUFBTU8sVUFBc0JaLEVBQ3pDMUUsV0FBQUEsQ0FBWTJFLEVBQWVZLEdBQ3pCQyxNQUFNLENBQUViLGtCQUNSakUsS0FBSytFLFdBQWEvRSxLQUFLa0UsY0FBY3hELGNBQWMsZ0JBQ25EVixLQUFLZ0Ysa0JBQW9CSCxFQUN6QjdFLEtBQUtpRixZQUFjakYsS0FBSytFLFdBQVduQixpQkFBaUIsaUJBQ3BENUQsS0FBS2tGLGFBQWVsRixLQUFLa0UsY0FBY3hELGNBQWMsa0JBQ3JEVixLQUFLbUYsaUJBQW1CbkYsS0FBS2tGLGFBQWFyRCxXQUM1QyxDQUNBd0MsS0FBQUEsR0FDRXJFLEtBQUsrRSxXQUFXSyxRQUNoQk4sTUFBTVQsT0FDUixDQUVBZ0IsZUFBQUEsR0FDRSxNQUFNQyxFQUFjLENBQUMsRUFJckIsT0FIQXRGLEtBQUtpRixZQUFZdEIsU0FBUzRCLElBQ3hCRCxFQUFZQyxFQUFNM0YsTUFBUTJGLEVBQU1DLEtBQUssSUFFaENGLENBQ1QsQ0FFQWIsaUJBQUFBLEdBQ0VLLE1BQU1MLG9CQUVOekUsS0FBSytFLFdBQVdoRSxpQkFBaUIsVUFBVytDLElBQzFDQSxFQUFFQyxpQkFDRi9ELEtBQUtnRixrQkFBa0JoRixLQUFLcUYsa0JBQWtCLEdBRWxELENBQ0FJLFVBQUFBLENBQVdDLEdBRVAxRixLQUFLa0YsYUFBYXJELFlBRGhCNkQsRUFDOEIsWUFFQTFGLEtBQUttRixnQkFFekMsRUN0Q2EsTUFBTVEsRUFDbkJyRyxXQUFBQSxDQUFXQyxFQUFzQnFHLEdBQVcsSUFBaEMsTUFBRUMsRUFBSyxTQUFFQyxHQUFVdkcsRUFDN0JTLEtBQUsrRixPQUFTRixFQUNkN0YsS0FBS2dHLFdBQWF2RixTQUFTQyxjQUFja0YsR0FDekM1RixLQUFLaUcsVUFBWUgsQ0FDbkIsQ0FFQUksV0FBQUEsR0FDRWxHLEtBQUsrRixPQUFPcEMsU0FBU3dDLEdBQVNuRyxLQUFLaUcsVUFBVUUsSUFDL0MsQ0FFQUMsT0FBQUEsQ0FBUUMsR0FDTnJHLEtBQUtnRyxXQUFXTSxRQUFRRCxFQUMxQixFQ2JLLE1BMkJNRSxFQUFvQjlGLFNBQVNDLGNBQ3hDLHlCQUVXOEYsRUFBbUIvRixTQUFTQyxjQUFjLHdCQUsxQytGLEdBSmVoRyxTQUFTQyxjQUFjLG1CQUNqQkQsU0FBU0MsY0FDekMseUJBRStCRCxTQUFTQyxjQUFjLHlCQUMzQ2dHLEVBQTBCakcsU0FBU0MsY0FDOUMsOEJBRVdpRyxFQUFnQmxHLFNBQVNDLGNBQ3BDLDZCQUVXa0csRUFBb0JuRyxTQUFTQyxjQUFjLHNCQUkzQ21HLEdBSHFCcEcsU0FBU0MsY0FBYyxxQkFDbEMrRixFQUFrQmpCLE1BQ25Ca0IsRUFBd0JsQixNQUNmZ0IsRUFBaUI5RixjQUFjLGlCQUNqRG9HLEVBQWtCckcsU0FBU0MsY0FBYyxvQkFFekNxRyxHQURhdEcsU0FBU0MsY0FBYyxnQkFDakJELFNBQVNDLGNBQWMseUJBQzFDc0csRUFBaUJGLEVBQWdCcEcsY0FBYyxtQkFXL0N1RyxHQVZpQkQsRUFBZXRHLGNBQzNDLDRCQUcwQnNHLEVBQWV0RyxjQUN6QywwQkFFK0JELFNBQVNDLGNBQ3hDLHlCQUVnQyxDQUNoQ3dCLGNBQWUsZ0JBQ2ZFLHFCQUFzQixpQkFDdEJFLG9CQUFxQix5QkFDckJFLGdCQUFpQiwwQkFDakJFLFdBQVkseUJDakNSd0UsRUFBTSxJQ2pDRyxNQUNiNUgsV0FBQUEsQ0FBWTZILEVBQVNDLEdBQ25CcEgsS0FBS3FILFNBQVdGLEVBQ2hCbkgsS0FBS3NILFNBQVdGLENBQ2xCLENBRUFHLGNBQUFBLENBQWVDLEdBQ2IsT0FBSUEsRUFBSUMsR0FDQ0QsRUFBSUUsT0FFTkMsUUFBUUMsT0FBUSxTQUFRSixFQUFJSyxTQUNyQyxDQUVBQyxlQUFBQSxHQUNFLE9BQU9DLE1BQU8sR0FBRS9ILEtBQUtxSCxTQUFTVyxnQkFBaUIsQ0FDN0NaLFFBQVNwSCxLQUFLcUgsU0FBU0QsVUFDdEJhLEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBVyxXQUFBQSxHQUNFLE9BQU9ILE1BQU8sR0FBRS9ILEtBQUtxSCxTQUFTVyxtQkFBb0IsQ0FDaERaLFFBQVNwSCxLQUFLcUgsU0FBU0QsVUFDdEJhLEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBWSxjQUFBQSxDQUFjNUksR0FBZ0IsSUFBZixLQUFFSyxFQUFJLElBQUV3SSxHQUFLN0ksRUFDMUIsT0FBT3dJLE1BQU8sR0FBRS9ILEtBQUtxSCxTQUFTVyxtQkFBb0IsQ0FDaERLLE9BQVEsUUFDUmpCLFFBQVNwSCxLQUFLcUgsU0FBU0QsUUFDdkJrQixLQUFNQyxLQUFLQyxVQUFVLENBQ25CNUksS0FBTUEsRUFDTjZJLE1BQU9MLE1BRVJILEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBbUIsVUFBQUEsQ0FBVUMsR0FBaUIsSUFBaEIsS0FBRS9JLEVBQUksS0FBRUMsR0FBTThJLEVBQ3ZCLE9BQU9aLE1BQU8sR0FBRS9ILEtBQUtxSCxTQUFTVyxnQkFBaUIsQ0FDN0NLLE9BQVEsT0FDUmpCLFFBQVNwSCxLQUFLcUgsU0FBU0QsUUFDdkJrQixLQUFNQyxLQUFLQyxVQUFVLENBQ25CNUksT0FDQUMsV0FFRG9JLEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBcUIsYUFBQUEsQ0FBYy9JLEdBQ1osT0FBT2tJLE1BQU8sR0FBRS9ILEtBQUtxSCxTQUFTVywwQkFBMkIsQ0FDdkRLLE9BQVEsUUFDUmpCLFFBQVNwSCxLQUFLcUgsU0FBU0QsUUFDdkJrQixLQUFNQyxLQUFLQyxVQUFVLENBQ25CSyxPQUFRaEosTUFFVG9JLEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBdkcsUUFBQUEsQ0FBUzhILEdBQ1AsT0FBT2YsTUFBTyxHQUFFL0gsS0FBS3FILFNBQVNXLGlCQUFpQmMsVUFBZ0IsQ0FDN0RULE9BQVEsTUFDUmpCLFFBQVNwSCxLQUFLcUgsU0FBU0QsVUFDdEJhLEtBQUtqSSxLQUFLdUgsZUFDZixDQUVBd0IsV0FBQUEsQ0FBWUQsR0FDVixPQUFPZixNQUFPLEdBQUUvSCxLQUFLcUgsU0FBU1csaUJBQWlCYyxVQUFnQixDQUM3RFQsT0FBUSxTQUNSakIsUUFBU3BILEtBQUtxSCxTQUFTRCxVQUN0QmEsS0FBS2pJLEtBQUt1SCxlQUNmLENBRUFyRyxVQUFBQSxDQUFXNEgsR0FDVCxPQUFPZixNQUFPLEdBQUUvSCxLQUFLcUgsU0FBU1csaUJBQWlCYyxJQUFVLENBQ3ZEVCxPQUFRLFNBQ1JqQixRQUFTcEgsS0FBS3FILFNBQVNELFVBQ3RCYSxLQUFLakksS0FBS3VILGVBQ2YsR0QzQ2tCLENBQ2xCUyxRQUFTLGtEQUNUWixRQUFTLENBQ1A0QixjQUFlLHVDQUNmLGVBQWdCLHNCQXNDcEIsU0FBU0MsRUFBV0MsR0FDbEIsTUFBTUMsRUFuQ1IsU0FBb0JELEdBZ0NsQixPQS9Cb0IsSUFBSTdKLEVBQ3RCNkosRUFDQSxrQkFDQSxDQUFDdEosRUFBTUMsS0FDTHVKLEVBQWNqRixLQUFLdkUsRUFBTUMsRUFBSyxJQUUvQndKLEdBQ0tBLEVBQUt0SixRQUNBbUgsRUFDSjZCLFlBQVlNLEVBQUtsSixJQUNqQjhILE1BQU1ULElBQ0w2QixFQUFLcEksY0FDTG9JLEVBQUt0SixTQUFXc0osRUFBS3RKLE9BQU8sSUFFN0J1SixPQUFPQyxJQUNOQyxRQUFRQyxNQUFPLEdBQUVGLGdDQUFrQyxJQUdoRHJDLEVBQ0psRyxTQUFTcUksRUFBS2xKLElBQ2Q4SCxNQUFNVCxJQUNMNkIsRUFBS3JJLFdBQ0xxSSxFQUFLdEosU0FBV3NKLEVBQUt0SixPQUFPLElBRTdCdUosT0FBT0MsSUFDTkMsUUFBUUMsTUFBTUYsRUFBSSxLQUkxQjVKLEdBRWlCOEIsU0FDckIsQ0FFbUJpSCxDQUFXUSxHQUU1QlEsRUFBWXRELFFBQVErQyxFQUN0QixDQTRDQSxNQUFNUSxFQUFvQixJQUFJN0gsRUFDNUJtRixFQUNBSixHQU1JK0MsRUFBa0IsSUVqSVQsY0FBb0M1RixFQUNqRDFFLFdBQUFBLENBQVkyRSxHQUNWYSxNQUFNLENBQUViLGtCQUNSakUsS0FBSzZKLFVBQVk3SixLQUFLa0UsY0FBY3hELGNBQWMsZ0JBQ2xEVixLQUFLa0YsYUFBZWxGLEtBQUtrRSxjQUFjeEQsY0FBYyxrQkFDckRWLEtBQUt5RSxvQkFDTHpFLEtBQUttRixpQkFBbUJuRixLQUFLa0YsYUFBYXJELFdBQzVDLENBRUFpSSxlQUFBQSxDQUFnQkMsR0FDZC9KLEtBQUtnRixrQkFBb0IrRSxDQUMzQixDQUVBdEYsaUJBQUFBLEdBQ0VLLE1BQU1MLG9CQUNOekUsS0FBSzZKLFVBQVU5SSxpQkFBaUIsVUFBVytDLElBQ3pDQSxFQUFFQyxpQkFDSy9ELEtBQUtnRixvQkFBb0JpRCxNQUFLLEtBQ25DakksS0FBS3FFLE9BQU8sTUFHbEIsQ0FDQW9CLFVBQUFBLENBQVdDLEdBRVAxRixLQUFLa0YsYUFBYXJELFlBRGhCNkQsRUFDOEIsY0FFQTFGLEtBQUttRixnQkFFekMsR0ZxR2dELHVCQUVsRCxTQUFTeEYsRUFBa0IwSixHQUN6Qk8sRUFBZ0JFLGlCQUFnQixLQUM5QkYsRUFBZ0JuRSxZQUFXLEdBQ3BCeUIsRUFDSmhHLFdBQVdtSSxFQUFLbEosSUFDaEI4SCxNQUFNVCxJQUNMNkIsRUFBS25JLFlBQVksSUFFbEJvSSxPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLElBRW5CUyxTQUFRLEtBQ1BKLEVBQWdCbkUsWUFBVyxFQUFNLE9BR3ZDbUUsRUFBZ0J6RixNQUNsQixDQUtBLE1BQU04RixFQUFtQixJQUFJbkksRUFBY21GLEVBQW9CRCxHQUMvRGlELEVBQWlCcEcsbUJBQ2pCOEYsRUFBa0I5RixtQkFNbEIsTUFBTXFHLEVBQWUsSUFBSXRGLEVBQ3ZCLG9CQWpFRixTQUFpQ3VGLEdBQy9CRCxFQUFhekUsWUFBVyxHQUN4QixNQUFNLE1BQUUyRSxFQUFLLFNBQUVDLEdBQWFGLEVBQzVCakQsRUFDR3dCLFdBQVcsQ0FDVjlJLEtBQU13SyxFQUNOdkssS0FBTXdLLElBRVBwQyxNQUFNb0IsSUFDTEosRUFBV0ksR0FDWGEsRUFBYTdGLE9BQU8sSUFFckJpRixPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLElBRW5CUyxTQUFRLEtBQ1BFLEVBQWF6RSxZQUFXLEVBQU0sSUFHbEN3RSxFQUFpQi9HLG1CQUNuQixJQWdEQWdILEVBQWF6RixvQkFFYnNDLEVBQWlCaEcsaUJBQWlCLFNBQVMsS0FDekNtSixFQUFhL0YsT0FDYjhGLEVBQWlCL0csbUJBQW1CLElBTXRDLE1BQU1vSCxFQUFtQixJQUFJMUYsRUFDM0Isd0JBOUZGLFNBQWlDdUYsR0FDL0JHLEVBQWlCN0UsWUFBVyxHQUM1QnlCLEVBQ0dpQixlQUFlZ0MsR0FDZmxDLE1BQUssS0FDSnNDLEVBQVNDLFlBQVlMLEVBQVN2SyxLQUFNdUssRUFBUy9CLEtBQzdDa0MsRUFBaUJqRyxPQUFPLElBRXpCaUYsT0FBT0MsSUFDTkMsUUFBUUMsTUFBTUYsRUFBSSxJQUVuQlMsU0FBUSxLQUNQTSxFQUFpQjdFLFlBQVcsRUFBTSxHQUV4QyxJQW1GQTZFLEVBQWlCN0Ysb0JBRWpCOEIsRUFBa0J4RixpQkFBaUIsU0FBUyxLQUMxQyxNQUFNMEosRUFBT0YsRUFBU3JDLGNBQ3RCekIsRUFBa0JqQixNQUFRaUYsRUFBSzdLLEtBQy9COEcsRUFBd0JsQixNQUFRaUYsRUFBS3JDLElBQ3JDa0MsRUFBaUJuRyxNQUFNLElBR3pCLE1BQU11RyxFQUFzQixJQUFJNUksRUFDOUJtRixFQUNBTCxHQUVGOEQsRUFBb0I3RyxtQkFJcEIsTUFBTThHLEVBQWtCLElBQUkvRixFQUFjLHVCQUF3QnVGLElBQ2hFUSxFQUFnQmxGLFlBQVcsR0FDM0J5QixFQUNHMEIsY0FBY3VCLEVBQVN0QixRQUN2QlosTUFBTVQsSUFDTCtDLEVBQVNLLFVBQVVwRCxFQUFJcUIsUUFDdkI4QixFQUFnQnRHLE9BQU8sSUFFeEJpRixPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLElBRW5CUyxTQUFRLEtBQ1BXLEVBQWdCbEYsWUFBVyxFQUFNLEdBQ2pDLElBR05rRixFQUFnQmxHLG9CQUloQmtDLEVBQWM1RixpQkFBaUIsU0FBUyxLQUN0QzRKLEVBQWdCeEcsT0FDaEJ1RyxFQUFvQnhILG1CQUFtQixJQU16QyxNQUFNa0csRUFBZ0IsSUcvTlAsY0FBNkJwRixFQUMxQzFFLFdBQUFBLENBQVkyRSxHQUNWYSxNQUFNLENBQUViLGtCQUNSakUsS0FBSzZLLE9BQVM3SyxLQUFLa0UsY0FBY3hELGNBQWMseUJBQy9DVixLQUFLOEssYUFBZTlLLEtBQUtrRSxjQUFjeEQsY0FDckMsdUJBRUosQ0FFQXlELElBQUFBLENBQUt2RSxFQUFNQyxHQUNURyxLQUFLNkssT0FBT2xKLElBQU05QixFQUNsQkcsS0FBSzZLLE9BQU9qSixJQUFNaEMsRUFDbEJJLEtBQUs4SyxhQUFhakosWUFBY2pDLEVBQ2hDa0YsTUFBTVgsTUFDUixHSGlOdUMseUJBQ3pDaUYsRUFBYzNFLG9CQUtkLE1BQU04RixFQUFXLElJdk9GLE1BQ2JqTCxXQUFBQSxDQUFZTSxFQUFNd0ksRUFBS1MsR0FDckI3SSxLQUFLQyxNQUFRUSxTQUFTQyxjQUFjZCxHQUNwQ0ksS0FBSytLLEtBQU90SyxTQUFTQyxjQUFjMEgsR0FDbkNwSSxLQUFLZ0wsUUFBVXZLLFNBQVNDLGNBQWNtSSxFQUN4QyxDQUVBWCxXQUFBQSxHQUtFLE1BSmlCLENBQ2Z0SSxLQUFNSSxLQUFLQyxNQUFNNEIsWUFDakJ1RyxJQUFLcEksS0FBSytLLEtBQUtsSixZQUduQixDQUVBMkksV0FBQUEsQ0FBWTVLLEVBQU13SSxHQUNoQnBJLEtBQUtDLE1BQU00QixZQUFjakMsRUFDekJJLEtBQUsrSyxLQUFLbEosWUFBY3VHLENBQzFCLENBRUF3QyxTQUFBQSxDQUFVL0IsR0FDUjdJLEtBQUtnTCxRQUFRckosSUFBTWtILENBQ3JCLEdKa05BLGtCQUNBLHdCQUNBLG1CQWFGLElBQUlhLEVBVkp4QyxFQUNHZ0IsY0FDQUQsTUFBTXdDLElBQ0xGLEVBQVNDLFlBQVlDLEVBQUs3SyxLQUFNNkssRUFBS2hDLE9BQ3JDOEIsRUFBU0ssVUFBVUgsRUFBSzVCLE9BQU8sSUFFaENTLE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksSUFJdEJyQyxFQUNHWSxrQkFDQUcsTUFBTWdELElBQ0x2QixFQUFjLElBQUkvRCxFQUNoQixDQUFFRSxNQUFPb0YsRUFBTUMsVUFBV3BGLFNBQVVtRCxHQUNwQyxnQkFHRlMsRUFBWXhELGFBQWEsSUFFMUJvRCxPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICB7IG5hbWUsIGxpbmssIF9pZCwgaXNMaWtlZCB9LFxyXG4gICAgY2FyZFNlbGVjdG9yLFxyXG4gICAgaGFuZGxlSW1hZ2VDbGljayxcclxuICAgIGhhbmRsZUxpa2VDbGljayxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrXHJcbiAgKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xyXG4gICAgdGhpcy5pZCA9IF9pZDtcclxuICAgIHRoaXMuaXNMaWtlZCA9IGlzTGlrZWQ7XHJcbiAgICB0aGlzLl9jYXJkU2VsZWN0b3IgPSBjYXJkU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrID0gaGFuZGxlSW1hZ2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayA9IGhhbmRsZUxpa2VDbGljaztcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcclxuICAgICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdC1pdGVtXCIpXHJcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XHJcbiAgICB0aGlzLnNldExpa2VCdXR0b25TdGF0ZSgpO1xyXG4gIH1cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAvLyBMSUtFIEJVVFRPTlxyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzKTtcclxuICAgICAgfSk7XHJcbiAgICAvLyBERUxFVEUgQlVUVE9OXHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fZGVsZXRlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayh0aGlzKTtcclxuICAgICAgfSk7XHJcbiAgICAvLyAgIElNQUdFIFBSRVZJRVdcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19pbWFnZVwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVJbWFnZUNsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgICB9KTtcclxuICB9XHJcblxyXG4gIHNldExpa2VCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5saWtlQ2FyZCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5kaXNMaWtlQ2FyZCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgbGlrZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlrZS1idXR0b25cIilcclxuICAgICAgLmNsYXNzTGlzdC5hZGQoXCJjYXJkc19fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgZGlzTGlrZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlrZS1idXR0b25cIilcclxuICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkc19fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUxpa2VJY29uKCkge1xyXG4gICAgdGhpcy5faGFuZGxlTGlrZUNsaWNrKHsgaWQ6IHRoaXMuX2lkLCBpc0xpa2VkOiB0aGlzLl9pc0xpa2VkIH0pO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpa2UtYnV0dG9uXCIpXHJcbiAgICAgIC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZHNfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICBjb25zdCBjYXJkSW1hZ2VFbCA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2ltYWdlXCIpO1xyXG4gICAgY2FyZEltYWdlRWwuc3JjID0gdGhpcy5fbGluaztcclxuICAgIGNhcmRJbWFnZUVsLmFsdCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgY29uc3QgY2FyZFRpdGxlRWwgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX190aXRsZVwiKTtcclxuICAgIGNhcmRUaXRsZUVsLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuXHJcbiAgICAvLyBieSBkZWZhdWx0IHlvdSBuZWVkIHRvIGNoZWNrIHRoZSBpc0xpa2VkIGZpZWxkIGFuZCBzZXQgbGlrZSBidXR0b24gdG8gdGhlIGFjdGl2ZS9wYXNzaXZlIHN0YXRlIGJhc2VkIG9uIGlzTGlrZWRcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3MsIGZvcm1FbCkge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IHNldHRpbmdzLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IHNldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBzZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtRWw7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpIHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZUVsID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xyXG4gICAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC50ZXh0Q29udGVudCA9IGlucHV0RWwudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICBlcnJvck1lc3NhZ2VFbC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gIH1cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWwuaWR9LWVycm9yYCk7XHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5faW5wdXRFbHMpKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcbiAgX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpIHtcclxuICAgIHJldHVybiAhaW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoKSB7XHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5faW5wdXRFbHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXTtcclxuXHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkodGhpcy5fZm9ybSwgaW5wdXRFbCk7XHJcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSh0aGlzLl9zdWJtaXRCdXR0b24pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IoeyBwb3B1cFNlbGVjdG9yIH0pIHtcclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICBvcGVuKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UgPSAoZXZ0KSA9PiB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBjbG9zZUJ0biA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuICAgIGNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9vcGVuZWRcIikpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX2lucHV0SXRlbXMgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbF9faW5wdXRcIik7XHJcbiAgICB0aGlzLl9wb3B1cEJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b25cIik7XHJcbiAgICB0aGlzLl9wb3B1cEJ1dHRvblRleHQgPSB0aGlzLl9wb3B1cEJ1dHRvbi50ZXh0Q29udGVudDtcclxuICB9XHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIHN1cGVyLmNsb3NlKCk7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dFZhbHVlcyA9IHt9O1xyXG4gICAgdGhpcy5faW5wdXRJdGVtcy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG4gIHNldExvYWRpbmcoaXNMb2FkaW5nKSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwQnV0dG9uLnRleHRDb250ZW50ID0gXCJTYXZpbmcuLi5cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fcG9wdXBCdXR0b25UZXh0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjb250YWluZXIpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lcik7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB0aGlzLl9yZW5kZXJlcihpdGVtKSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjcHJvZmlsZV9fZWRpdC1idXR0b25cIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZV9fZWRpdC1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCJcclxuKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24taW5wdXRcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIucHJvZmlsZV9faW1hZ2UtY29udGFpbmVyXCJcclxuKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0X19hdmF0YXItZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IHByb2ZpbGVBdmF0YXJJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXZhdGFyLXVybC1pbnB1dFwiKTtcclxuZXhwb3J0IGNvbnN0IG5ld05hbWUgPSBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZTtcclxuZXhwb3J0IGNvbnN0IG5ld0pvYiA9IHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZUVkaXRGb3JtID0gcHJvZmlsZUVkaXRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgYWRkTmV3Q2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjYXJkX19hZGQtbW9kYWxcIik7XHJcbmV4cG9ydCBjb25zdCBjYXJkTGlzdEVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZE5ld0NhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGVfX2FkZC1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBhZGROZXdDYXJkRm9ybSA9IGFkZE5ld0NhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2FkZF9fY2FyZC1mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgY2FyZFRpdGxlSW5wdXQgPSBhZGROZXdDYXJkRm9ybS5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLm1vZGFsX19pbnB1dF90eXBlX3RpdGxlXCJcclxuKTtcclxuXHJcbmV4cG9ydCBjb25zdCBjYXJkVXJsSW5wdXQgPSBhZGROZXdDYXJkRm9ybS5xdWVyeVNlbGVjdG9yKFxyXG4gIFwiLm1vZGFsX19pbnB1dF90eXBlX3VybFwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBwcmV2aWV3SW1hZ2VNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIjcHJldmlld19faW1hZ2UtbW9kYWxcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xyXG4gIGlucHV0U2VsZWN0b3I6IFwiLm1vZGFsX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uXCIsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgZXJyb3JDbGFzczogXCJtb2RhbF9fZXJyb3JfdmlzaWJsZVwiLFxyXG59O1xyXG4iLCJpbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFwiLi9pbmRleC5jc3NcIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IHtcclxuICBpbml0aWFsQ2FyZHMsXHJcbiAgcHJvZmlsZUVkaXRCdXR0b24sXHJcbiAgcHJvZmlsZUVkaXRNb2RhbCxcclxuICBwcm9maWxlVGl0bGUsXHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uLFxyXG4gIHByb2ZpbGVUaXRsZUlucHV0LFxyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LFxyXG4gIHByb2ZpbGVFZGl0Rm9ybSxcclxuICBjYXJkTGlzdEVsLFxyXG4gIGFkZE5ld0NhcmRCdXR0b24sXHJcbiAgYWRkTmV3Q2FyZEZvcm0sXHJcbiAgY2FyZFRpdGxlSW5wdXQsXHJcbiAgY2FyZFVybElucHV0LFxyXG4gIGFkZE5ld0NhcmRNb2RhbCxcclxuICBwcmV2aWV3SW1hZ2VNb2RhbCxcclxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXHJcbiAgbmV3TmFtZSxcclxuICBuZXdKb2IsXHJcbiAgcHJvZmlsZUF2YXRhcixcclxuICBwcm9maWxlQXZhdGFySW5wdXQsXHJcbiAgcHJvZmlsZUF2YXRhckZvcm0sXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZTliMzBmNjItZjMyZC00NWI2LTk2YWUtYzUxNmI2YjdkNWNkXCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICB9LFxyXG59KTtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoY2FyZERhdGEpIHtcclxuICBjb25zdCBjYXJkRWxlbWVudCA9IG5ldyBDYXJkKFxyXG4gICAgY2FyZERhdGEsXHJcbiAgICBcIiNjYXJkLXRlbXBsYXRlXCIsXHJcbiAgICAobmFtZSwgbGluaykgPT4ge1xyXG4gICAgICBuZXdJbWFnZVBvcHVwLm9wZW4obmFtZSwgbGluayk7XHJcbiAgICB9LFxyXG4gICAgKGNhcmQpID0+IHtcclxuICAgICAgaWYgKGNhcmQuaXNMaWtlZCkge1xyXG4gICAgICAgIHJldHVybiBhcGlcclxuICAgICAgICAgIC5kaXNsaWtlQ2FyZChjYXJkLmlkKVxyXG4gICAgICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBjYXJkLmRpc0xpa2VDYXJkKCk7XHJcbiAgICAgICAgICAgIGNhcmQuaXNMaWtlZCA9ICFjYXJkLmlzTGlrZWQ7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgJHtlcnJ9LiBDYW5ub3QgZGlzbGlrZSBsaWtlIGJ1dHRvbmApO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGFwaVxyXG4gICAgICAgICAgLmxpa2VDYXJkKGNhcmQuaWQpXHJcbiAgICAgICAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGNhcmQubGlrZUNhcmQoKTtcclxuICAgICAgICAgICAgY2FyZC5pc0xpa2VkID0gIWNhcmQuaXNMaWtlZDtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGhhbmRsZURlbGV0ZUNsaWNrXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZEVsZW1lbnQuZ2V0VmlldygpO1xyXG59XHJcbmZ1bmN0aW9uIHJlbmRlckNhcmQoY2FyZERhdGEpIHtcclxuICBjb25zdCBjYXJkTm9kZSA9IGNyZWF0ZUNhcmQoY2FyZERhdGEpO1xyXG5cclxuICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmROb2RlKTtcclxufVxyXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4gKiBFVkVOVCBIQU5ETEVSUyBGT1IgU1VNQklUVElORyBQUk9GSUxFIEFORCBDQVJEIERBVEEgKlxyXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cclxuZnVuY3Rpb24gaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXQoZm9ybURhdGEpIHtcclxuICBwcm9maWxlRWRpdFBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAudXBkYXRlVXNlckluZm8oZm9ybURhdGEpXHJcbiAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKGZvcm1EYXRhLm5hbWUsIGZvcm1EYXRhLmpvYik7XHJcbiAgICAgIHByb2ZpbGVFZGl0UG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBwcm9maWxlRWRpdFBvcHVwLnNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXQoZm9ybURhdGEpIHtcclxuICBuZXdDYXJkUG9wdXAuc2V0TG9hZGluZyh0cnVlKTtcclxuICBjb25zdCB7IHRpdGxlLCBpbWFnZVVybCB9ID0gZm9ybURhdGE7XHJcbiAgYXBpXHJcbiAgICAuY3JlYXRlQ2FyZCh7XHJcbiAgICAgIG5hbWU6IHRpdGxlLFxyXG4gICAgICBsaW5rOiBpbWFnZVVybCxcclxuICAgIH0pXHJcbiAgICAudGhlbigoY2FyZCkgPT4ge1xyXG4gICAgICByZW5kZXJDYXJkKGNhcmQpO1xyXG4gICAgICBuZXdDYXJkUG9wdXAuY2xvc2UoKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBuZXdDYXJkUG9wdXAuc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxuXHJcbiAgYWRkRm9ybVZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG59XHJcblxyXG4vKioqKioqKioqKioqKioqKioqKioqKipcclxuICogRURJVCBGT1JNIFZBTElEQVRPUiAqXHJcbiAqKioqKioqKioqKioqKioqKioqKioqKi9cclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXHJcbiAgcHJvZmlsZUVkaXRGb3JtXHJcbik7XHJcblxyXG4vKioqKioqKioqKioqKioqKioqKioqXHJcbiAqIERFTEVURSBDQVJEIFBPUFVQICpcclxuICoqKioqKioqKioqKioqKioqKioqKi9cclxuY29uc3QgY2FyZERlbGV0ZVBvcHVwID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbihcIiNkZWxldGVfX2NhcmQtbW9kYWxcIik7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDbGljayhjYXJkKSB7XHJcbiAgY2FyZERlbGV0ZVBvcHVwLnNldFN1Ym1pdEFjdGlvbigoKSA9PiB7XHJcbiAgICBjYXJkRGVsZXRlUG9wdXAuc2V0TG9hZGluZyh0cnVlKTtcclxuICAgIHJldHVybiBhcGlcclxuICAgICAgLmRlbGV0ZUNhcmQoY2FyZC5pZClcclxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIGNhcmREZWxldGVQb3B1cC5zZXRMb2FkaW5nKGZhbHNlKTtcclxuICAgICAgfSk7XHJcbiAgfSk7XHJcbiAgY2FyZERlbGV0ZVBvcHVwLm9wZW4oKTtcclxufVxyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKipcclxuICogQUREIEZPUk0gVkFMSURBVE9SICpcclxuICoqKioqKioqKioqKioqKioqKioqKiovXHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGFkZE5ld0NhcmRGb3JtKTtcclxuYWRkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbi8qKioqKioqKioqKioqKioqKioqKioqKlxyXG4gKiBORVcgQ0FSRCBGT1JNIFBPUFVQICpcclxuICoqKioqKioqKioqKioqKioqKioqKioqL1xyXG5cclxuY29uc3QgbmV3Q2FyZFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0oXHJcbiAgXCIjY2FyZF9fYWRkLW1vZGFsXCIsXHJcbiAgaGFuZGxlQWRkQ2FyZEZvcm1TdWJtaXRcclxuKTtcclxubmV3Q2FyZFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5hZGROZXdDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgbmV3Q2FyZFBvcHVwLm9wZW4oKTtcclxuICBhZGRGb3JtVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbn0pO1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKipcclxuICogUFJPRklMRSBFRElUIFBPUFVQICpcclxuICoqKioqKioqKioqKioqKioqKioqKiovXHJcbmNvbnN0IHByb2ZpbGVFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcclxuICBcIiNwcm9maWxlX19lZGl0LW1vZGFsXCIsXHJcbiAgaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXRcclxuKTtcclxucHJvZmlsZUVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxucHJvZmlsZUVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICBjb25zdCB1c2VyID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHVzZXIubmFtZTtcclxuICBwcm9maWxlRGVzY3JpcHRpb25JbnB1dC52YWx1ZSA9IHVzZXIuam9iO1xyXG4gIHByb2ZpbGVFZGl0UG9wdXAub3BlbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IGF2YXRhckZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICB2YWxpZGF0aW9uU2V0dGluZ3MsXHJcbiAgcHJvZmlsZUF2YXRhckZvcm1cclxuKTtcclxuYXZhdGFyRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbi8qKioqKioqKioqKioqKioqKioqKipcclxuICogQVZBVEFSIEVESVQgUE9QVVAgKlxyXG4gKioqKioqKioqKioqKioqKioqKioqL1xyXG5jb25zdCBhdmF0YXJFZGl0UG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNhdmF0YXJfX2VkaXQtbW9kYWxcIiwgKGZvcm1EYXRhKSA9PiB7XHJcbiAgYXZhdGFyRWRpdFBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgICAuc2V0VXNlckF2YXRhcihmb3JtRGF0YS5hdmF0YXIpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIHVzZXJJbmZvLnNldEF2YXRhcihyZXMuYXZhdGFyKTtcclxuICAgICAgYXZhdGFyRWRpdFBvcHVwLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgfSlcclxuICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgYXZhdGFyRWRpdFBvcHVwLnNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuYXZhdGFyRWRpdFBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuICogQVZBVEFSIEVESVQgRVZFTlQgTElTVEVORVIgKlxyXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xyXG5wcm9maWxlQXZhdGFyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyRWRpdFBvcHVwLm9wZW4oKTtcclxuICBhdmF0YXJGb3JtVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbn0pO1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKlxyXG4gKiBQT1BVUFdJVEhJTUFHRSAqXHJcbiAqKioqKioqKioqKioqKioqKiovXHJcbmNvbnN0IG5ld0ltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcHJldmlld19faW1hZ2UtbW9kYWxcIik7XHJcbm5ld0ltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8qKioqKioqKioqKioqXHJcbiAqIFVTRVIgSU5GTyAqXHJcbiAqKioqKioqKioqKioqL1xyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcclxuICBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIsXHJcbiAgXCIucHJvZmlsZV9faW1hZ2VcIlxyXG4pO1xyXG5cclxuYXBpXHJcbiAgLmdldFVzZXJJbmZvKClcclxuICAudGhlbigodXNlcikgPT4ge1xyXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8odXNlci5uYW1lLCB1c2VyLmFib3V0KTtcclxuICAgIHVzZXJJbmZvLnNldEF2YXRhcih1c2VyLmF2YXRhcik7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH0pO1xyXG5cclxubGV0IGNhcmRTZWN0aW9uO1xyXG5hcGlcclxuICAuZ2V0SW5pdGlhbENhcmRzKClcclxuICAudGhlbigoY2FyZHMpID0+IHtcclxuICAgIGNhcmRTZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAgICAgIHsgaXRlbXM6IGNhcmRzLnJldmVyc2UoKSwgcmVuZGVyZXI6IHJlbmRlckNhcmQgfSxcclxuICAgICAgXCIuY2FyZHNfX2xpc3RcIlxyXG4gICAgKTtcclxuXHJcbiAgICBjYXJkU2VjdGlvbi5yZW5kZXJJdGVtcygpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICB9KTtcclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBoZWFkZXJzKSB7XHJcbiAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvciAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgaGVhZGVyczogdGhpcy5fb3B0aW9ucy5oZWFkZXJzLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVVc2VySW5mbyh7IG5hbWUsIGpvYiB9KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGpvYixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgY3JlYXRlQ2FyZCh7IG5hbWUsIGxpbmsgfSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWUsXHJcbiAgICAgICAgbGluayxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckF2YXRhcihsaW5rKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fb3B0aW9ucy5iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9vcHRpb25zLmhlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBhdmF0YXI6IGxpbmssXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcclxuICB9XHJcblxyXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX29wdGlvbnMuYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9L2xpa2VzYCwge1xyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX29wdGlvbnMuaGVhZGVycyxcclxuICAgIH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XHJcbiAgfVxyXG5cclxuICBkaXNsaWtlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9vcHRpb25zLmJhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9vcHRpb25zLmhlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSWQpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9vcHRpb25zLmJhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9vcHRpb25zLmhlYWRlcnMsXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xyXG4gIH1cclxufVxyXG5cclxuLy8gb3RoZXIgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIHRoZSBBUElcclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIoeyBwb3B1cFNlbGVjdG9yIH0pO1xyXG4gICAgdGhpcy5wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybVwiKTtcclxuICAgIHRoaXMuX3BvcHVwQnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcclxuICAgIHRoaXMuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3BvcHVwQnV0dG9uVGV4dCA9IHRoaXMuX3BvcHVwQnV0dG9uLnRleHRDb250ZW50O1xyXG4gIH1cclxuXHJcbiAgc2V0U3VibWl0QWN0aW9uKHN1Ym1pdEhhbmRsZXIpIHtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBzdWJtaXRIYW5kbGVyO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT4ge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHJldHVybiB0aGlzLl9oYW5kbGVGb3JtU3VibWl0KCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBzZXRMb2FkaW5nKGlzTG9hZGluZykge1xyXG4gICAgaWYgKGlzTG9hZGluZykge1xyXG4gICAgICB0aGlzLl9wb3B1cEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiRGVsZXRpbmcuLi5cIjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwQnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fcG9wdXBCdXR0b25UZXh0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX3ByZXZpZXctaW1hZ2VcIik7XHJcbiAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5tb2RhbF9fcHJldmlldy10ZXh0XCJcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XHJcbiAgY29uc3RydWN0b3IobmFtZSwgam9iLCBhdmF0YXIpIHtcclxuICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWUpO1xyXG4gICAgdGhpcy5fam9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihqb2IpO1xyXG4gICAgdGhpcy5fYXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhdmF0YXIpO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCB1c2VyRGF0YSA9IHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgam9iOiB0aGlzLl9qb2IudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIHVzZXJEYXRhO1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8obmFtZSwgam9iKSB7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYi50ZXh0Q29udGVudCA9IGpvYjtcclxuICB9XHJcblxyXG4gIHNldEF2YXRhcihhdmF0YXIpIHtcclxuICAgIHRoaXMuX2F2YXRhci5zcmMgPSBhdmF0YXI7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJDYXJkIiwiY29uc3RydWN0b3IiLCJfcmVmIiwiY2FyZFNlbGVjdG9yIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZUxpa2VDbGljayIsImhhbmRsZURlbGV0ZUNsaWNrIiwibmFtZSIsImxpbmsiLCJfaWQiLCJpc0xpa2VkIiwidGhpcyIsIl9uYW1lIiwiX2xpbmsiLCJpZCIsIl9jYXJkU2VsZWN0b3IiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfaGFuZGxlRGVsZXRlQ2xpY2siLCJfY2FyZEVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwic2V0TGlrZUJ1dHRvblN0YXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxpa2VDYXJkIiwiZGlzTGlrZUNhcmQiLCJkZWxldGVDYXJkIiwicmVtb3ZlIiwiY2xhc3NMaXN0IiwiYWRkIiwiX2hhbmRsZUxpa2VJY29uIiwiX2lzTGlrZWQiLCJ0b2dnbGUiLCJnZXRWaWV3IiwiY2FyZEltYWdlRWwiLCJzcmMiLCJhbHQiLCJ0ZXh0Q29udGVudCIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbCIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9mb3JtIiwiX3N1Ym1pdEJ1dHRvbiIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWwiLCJlcnJvck1lc3NhZ2VFbCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0RWxzIiwiZGlzYWJsZWQiLCJpbnB1dExpc3QiLCJldmVyeSIsInZhbGlkaXR5IiwidmFsaWQiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiZm9yRWFjaCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbmFibGVWYWxpZGF0aW9uIiwiZSIsInByZXZlbnREZWZhdWx0IiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJzdXBlciIsIl9wb3B1cEZvcm0iLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9pbnB1dEl0ZW1zIiwiX3BvcHVwQnV0dG9uIiwiX3BvcHVwQnV0dG9uVGV4dCIsInJlc2V0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwic2V0TG9hZGluZyIsImlzTG9hZGluZyIsIlNlY3Rpb24iLCJjb250YWluZXIiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX2NvbnRhaW5lciIsIl9yZW5kZXJlciIsInJlbmRlckl0ZW1zIiwiaXRlbSIsImFkZEl0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsInByb2ZpbGVFZGl0QnV0dG9uIiwicHJvZmlsZUVkaXRNb2RhbCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZURlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlQXZhdGFyIiwicHJvZmlsZUF2YXRhckZvcm0iLCJwcm9maWxlRWRpdEZvcm0iLCJhZGROZXdDYXJkTW9kYWwiLCJhZGROZXdDYXJkQnV0dG9uIiwiYWRkTmV3Q2FyZEZvcm0iLCJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJhcGkiLCJvcHRpb25zIiwiaGVhZGVycyIsIl9vcHRpb25zIiwiX2hlYWRlcnMiLCJfY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRJbml0aWFsQ2FyZHMiLCJmZXRjaCIsImJhc2VVcmwiLCJ0aGVuIiwiZ2V0VXNlckluZm8iLCJ1cGRhdGVVc2VySW5mbyIsImpvYiIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWJvdXQiLCJjcmVhdGVDYXJkIiwiX3JlZjIiLCJzZXRVc2VyQXZhdGFyIiwiYXZhdGFyIiwiY2FyZElkIiwiZGlzbGlrZUNhcmQiLCJhdXRob3JpemF0aW9uIiwicmVuZGVyQ2FyZCIsImNhcmREYXRhIiwiY2FyZE5vZGUiLCJuZXdJbWFnZVBvcHVwIiwiY2FyZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwiY2FyZFNlY3Rpb24iLCJlZGl0Rm9ybVZhbGlkYXRvciIsImNhcmREZWxldGVQb3B1cCIsInBvcHVwRm9ybSIsInNldFN1Ym1pdEFjdGlvbiIsInN1Ym1pdEhhbmRsZXIiLCJmaW5hbGx5IiwiYWRkRm9ybVZhbGlkYXRvciIsIm5ld0NhcmRQb3B1cCIsImZvcm1EYXRhIiwidGl0bGUiLCJpbWFnZVVybCIsInByb2ZpbGVFZGl0UG9wdXAiLCJ1c2VySW5mbyIsInNldFVzZXJJbmZvIiwidXNlciIsImF2YXRhckZvcm1WYWxpZGF0b3IiLCJhdmF0YXJFZGl0UG9wdXAiLCJzZXRBdmF0YXIiLCJfaW1hZ2UiLCJfZGVzY3JpcHRpb24iLCJfam9iIiwiX2F2YXRhciIsImNhcmRzIiwicmV2ZXJzZSJdLCJzb3VyY2VSb290IjoiIn0=